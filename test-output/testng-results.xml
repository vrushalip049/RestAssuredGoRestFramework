<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="12" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-20T15:38:32 IST" name="API Regression Suite" finished-at="2025-03-20T15:38:56 IST" duration-ms="23911">
    <groups>
    </groups>
    <test started-at="2025-03-20T15:38:32 IST" name="get User Test" finished-at="2025-03-20T15:38:36 IST" duration-ms="3638">
      <class name="com.qa.api.tests.GetUserTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.api.tests.GetUserTest@3a4621bd]" started-at="2025-03-20T15:38:32 IST" name="setUp" finished-at="2025-03-20T15:38:33 IST" duration-ms="461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getAllUserTest()[pri:0, instance:com.qa.api.tests.GetUserTest@3a4621bd]" started-at="2025-03-20T15:38:33 IST" name="getAllUserTest" finished-at="2025-03-20T15:38:35 IST" duration-ms="2028" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllUserTest -->
        <test-method signature="getSingleUserTest()[pri:0, instance:com.qa.api.tests.GetUserTest@3a4621bd]" started-at="2025-03-20T15:38:35 IST" name="getSingleUserTest" finished-at="2025-03-20T15:38:36 IST" duration-ms="1079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSingleUserTest -->
      </class> <!-- com.qa.api.tests.GetUserTest -->
    </test> <!-- get User Test -->
    <test started-at="2025-03-20T15:38:36 IST" name="CreateUserTest User Test" finished-at="2025-03-20T15:38:40 IST" duration-ms="4648">
      <class name="com.qa.api.tests.CreateUserTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.api.tests.CreateUserTest@4b1d6571]" started-at="2025-03-20T15:38:36 IST" name="setUp" finished-at="2025-03-20T15:38:36 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="CreateUserTest()[pri:0, instance:com.qa.api.tests.CreateUserTest@4b1d6571]" started-at="2025-03-20T15:38:36 IST" name="CreateUserTest" finished-at="2025-03-20T15:38:38 IST" duration-ms="2597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateUserTest -->
        <test-method signature="CreateUserTestUsingBuilderTest()[pri:0, instance:com.qa.api.tests.CreateUserTest@4b1d6571]" started-at="2025-03-20T15:38:38 IST" name="CreateUserTestUsingBuilderTest" finished-at="2025-03-20T15:38:40 IST" duration-ms="2044" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateUserTestUsingBuilderTest -->
      </class> <!-- com.qa.api.tests.CreateUserTest -->
    </test> <!-- CreateUserTest User Test -->
    <test started-at="2025-03-20T15:38:40 IST" name="PatchUpdateTest Update User Test" finished-at="2025-03-20T15:38:43 IST" duration-ms="3017">
      <class name="com.qa.api.tests.PatchUpdateTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.api.tests.PatchUpdateTest@6fb365ed]" started-at="2025-03-20T15:38:40 IST" name="setUp" finished-at="2025-03-20T15:38:40 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="CreateUserTestUsingBuilderPatchTest()[pri:0, instance:com.qa.api.tests.PatchUpdateTest@6fb365ed]" started-at="2025-03-20T15:38:40 IST" name="CreateUserTestUsingBuilderPatchTest" finished-at="2025-03-20T15:38:43 IST" duration-ms="3013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateUserTestUsingBuilderPatchTest -->
      </class> <!-- com.qa.api.tests.PatchUpdateTest -->
    </test> <!-- PatchUpdateTest Update User Test -->
    <test started-at="2025-03-20T15:38:43 IST" name="PutUpdateTest User Test" finished-at="2025-03-20T15:38:46 IST" duration-ms="2961">
      <class name="com.qa.api.tests.PutUpdateTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.api.tests.PutUpdateTest@5a709816]" started-at="2025-03-20T15:38:43 IST" name="setUp" finished-at="2025-03-20T15:38:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="CreateUserTestUsingBuilderPutTest()[pri:0, instance:com.qa.api.tests.PutUpdateTest@5a709816]" started-at="2025-03-20T15:38:43 IST" name="CreateUserTestUsingBuilderPutTest" finished-at="2025-03-20T15:38:46 IST" duration-ms="2957" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateUserTestUsingBuilderPutTest -->
      </class> <!-- com.qa.api.tests.PutUpdateTest -->
    </test> <!-- PutUpdateTest User Test -->
    <test started-at="2025-03-20T15:38:46 IST" name="Delete User Test" finished-at="2025-03-20T15:38:51 IST" duration-ms="4658">
      <class name="com.qa.api.tests.DeleteTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.api.tests.DeleteTest@4748a0f9]" started-at="2025-03-20T15:38:46 IST" name="setUp" finished-at="2025-03-20T15:38:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="CreateUserTestUsingBuilderDeleteTest()[pri:0, instance:com.qa.api.tests.DeleteTest@4748a0f9]" started-at="2025-03-20T15:38:46 IST" name="CreateUserTestUsingBuilderDeleteTest" finished-at="2025-03-20T15:38:51 IST" duration-ms="4654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateUserTestUsingBuilderDeleteTest -->
      </class> <!-- com.qa.api.tests.DeleteTest -->
    </test> <!-- Delete User Test -->
    <test started-at="2025-03-20T15:38:51 IST" name="ReqresTest User Test" finished-at="2025-03-20T15:38:51 IST" duration-ms="96">
      <class name="com.qa.reqres.api.tests.ReqresTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.reqres.api.tests.ReqresTest@6dee4f1b]" started-at="2025-03-20T15:38:51 IST" name="setUp" finished-at="2025-03-20T15:38:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getUserReqresTest()[pri:0, instance:com.qa.reqres.api.tests.ReqresTest@6dee4f1b]" started-at="2025-03-20T15:38:51 IST" name="getUserReqresTest" finished-at="2025-03-20T15:38:51 IST" duration-ms="92" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserReqresTest -->
      </class> <!-- com.qa.reqres.api.tests.ReqresTest -->
    </test> <!-- ReqresTest User Test -->
    <test started-at="2025-03-20T15:38:51 IST" name="Contact User Test" finished-at="2025-03-20T15:38:53 IST" duration-ms="2262">
      <class name="com.qa.contacts.api.tests.ContactAPITest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.contacts.api.tests.ContactAPITest@4fad9bb2]" started-at="2025-03-20T15:38:51 IST" name="setUp" finished-at="2025-03-20T15:38:51 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getToken()[pri:0, instance:com.qa.contacts.api.tests.ContactAPITest@4fad9bb2]" started-at="2025-03-20T15:38:51 IST" name="getToken" finished-at="2025-03-20T15:38:52 IST" duration-ms="1160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToken -->
        <test-method signature="getContactTest()[pri:0, instance:com.qa.contacts.api.tests.ContactAPITest@4fad9bb2]" started-at="2025-03-20T15:38:52 IST" name="getContactTest" finished-at="2025-03-20T15:38:53 IST" duration-ms="1089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getContactTest -->
      </class> <!-- com.qa.contacts.api.tests.ContactAPITest -->
    </test> <!-- Contact User Test -->
    <test started-at="2025-03-20T15:38:53 IST" name="Product User Test" finished-at="2025-03-20T15:38:55 IST" duration-ms="1172">
      <class name="com.qa.products.api.test.ProductAPITest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.products.api.test.ProductAPITest@38831718]" started-at="2025-03-20T15:38:53 IST" name="setUp" finished-at="2025-03-20T15:38:53 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getProductAPILimitTest()[pri:0, instance:com.qa.products.api.test.ProductAPITest@38831718]" started-at="2025-03-20T15:38:53 IST" name="getProductAPILimitTest" finished-at="2025-03-20T15:38:54 IST" duration-ms="605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProductAPILimitTest -->
        <test-method signature="getProductAPITest()[pri:0, instance:com.qa.products.api.test.ProductAPITest@38831718]" started-at="2025-03-20T15:38:54 IST" name="getProductAPITest" finished-at="2025-03-20T15:38:55 IST" duration-ms="560" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProductAPITest -->
      </class> <!-- com.qa.products.api.test.ProductAPITest -->
    </test> <!-- Product User Test -->
    <test started-at="2025-03-20T15:38:55 IST" name="ProductAPITestWithJsonPathValidator User Test" finished-at="2025-03-20T15:38:55 IST" duration-ms="638">
      <class name="com.qa.products.api.test.ProductAPITestWithJsonPathValidator">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.products.api.test.ProductAPITestWithJsonPathValidator@e19bb76]" started-at="2025-03-20T15:38:55 IST" name="setUp" finished-at="2025-03-20T15:38:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getProductTestJsonPathTest()[pri:0, instance:com.qa.products.api.test.ProductAPITestWithJsonPathValidator@e19bb76]" started-at="2025-03-20T15:38:55 IST" name="getProductTestJsonPathTest" finished-at="2025-03-20T15:38:55 IST" duration-ms="633" status="FAIL">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class java.lang.Double cannot be cast to class java.util.List (java.lang.Double and java.util.List are in module java.base of loader 'bootstrap')]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class java.lang.Double cannot be cast to class java.util.List (java.lang.Double and java.util.List are in module java.base of loader 'bootstrap')
at com.qa.api.utils.JsonPathValidator.readMap(JsonPathValidator.java:35)
at com.qa.products.api.test.ProductAPITestWithJsonPathValidator.getProductTestJsonPathTest(ProductAPITestWithJsonPathValidator.java:38)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProductTestJsonPathTest -->
      </class> <!-- com.qa.products.api.test.ProductAPITestWithJsonPathValidator -->
    </test> <!-- ProductAPITestWithJsonPathValidator User Test -->
    <test started-at="2025-03-20T15:38:55 IST" name="GetUserWithDeserilization User Test" finished-at="2025-03-20T15:38:56 IST" duration-ms="735">
      <class name="com.qa.api.tests.GetUserWithDeserilization">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.api.tests.GetUserWithDeserilization@3f270e0a]" started-at="2025-03-20T15:38:55 IST" name="setUp" finished-at="2025-03-20T15:38:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getDeserilizeAllUserTest()[pri:0, instance:com.qa.api.tests.GetUserWithDeserilization@3f270e0a]" started-at="2025-03-20T15:38:55 IST" name="getDeserilizeAllUserTest" finished-at="2025-03-20T15:38:56 IST" duration-ms="730" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDeserilizeAllUserTest -->
      </class> <!-- com.qa.api.tests.GetUserWithDeserilization -->
    </test> <!-- GetUserWithDeserilization User Test -->
    <test started-at="2025-03-20T15:38:56 IST" name="AmadeusAPITest User Test" finished-at="2025-03-20T15:38:56 IST" duration-ms="10">
      <class name="com.qa.Oauth2.Amadeus.api.tests.AmadeusAPITest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.Oauth2.Amadeus.api.tests.AmadeusAPITest@2250b9f2]" started-at="2025-03-20T15:38:56 IST" name="setUp" finished-at="2025-03-20T15:38:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getFlightDetailsTest()[pri:0, instance:com.qa.Oauth2.Amadeus.api.tests.AmadeusAPITest@2250b9f2]" started-at="2025-03-20T15:38:56 IST" name="getFlightDetailsTest" finished-at="2025-03-20T15:38:56 IST" duration-ms="6" status="FAIL">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class io.restassured.internal.NoParameterValue cannot be cast to class java.lang.String (io.restassured.internal.NoParameterValue is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class io.restassured.internal.NoParameterValue cannot be cast to class java.lang.String (io.restassured.internal.NoParameterValue is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
at java.base/java.util.HashMap.forEach(HashMap.java:1429)
at io.qameta.allure.attachment.http.HttpRequestAttachment$Builder.getCurl(HttpRequestAttachment.java:253)
at io.qameta.allure.attachment.http.HttpRequestAttachment$Builder.build(HttpRequestAttachment.java:242)
at io.qameta.allure.restassured.AllureRestAssured.filter(AllureRestAssured.java:114)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)
at com.qa.api.client.RestClient.genertaOauth2Toke(RestClient.java:85)
at com.qa.api.client.RestClient.setupRequest(RestClient.java:50)
at com.qa.api.client.RestClient.get(RestClient.java:104)
at com.qa.Oauth2.Amadeus.api.tests.AmadeusAPITest.getFlightDetailsTest(AmadeusAPITest.java:23)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFlightDetailsTest -->
      </class> <!-- com.qa.Oauth2.Amadeus.api.tests.AmadeusAPITest -->
    </test> <!-- AmadeusAPITest User Test -->
  </suite> <!-- API Regression Suite -->
</testng-results>
